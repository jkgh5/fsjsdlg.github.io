WEBVTT
Kind: captions
Language: en

00:00:04.849 --> 00:00:08.834
Finally, we can start wrangling some data.

00:00:08.835 --> 00:00:12.420
We will cover two different ways to manipulate our data.

00:00:12.419 --> 00:00:16.844
The first is imperative programming using DataFrames and Python,

00:00:16.844 --> 00:00:20.640
the second is declarative programming using SQL.

00:00:20.640 --> 00:00:25.335
So what is the difference between imperative and declarative programming?

00:00:25.335 --> 00:00:27.405
A loose definition is that,

00:00:27.405 --> 00:00:30.603
imperative programming is concerned with the "How".

00:00:30.603 --> 00:00:35.100
While declarative programming cares about the "But".

00:00:35.100 --> 00:00:39.380
For example, your sister's birthday is coming up.

00:00:39.380 --> 00:00:41.460
A declarative statement would be,

00:00:41.460 --> 00:00:43.289
''Let's get the cake for Julia. "

00:00:43.289 --> 00:00:46.234
But the imperative statement is more like,

00:00:46.234 --> 00:00:47.659
"Let's get in the car,

00:00:47.659 --> 00:00:50.719
drive two miles down the road to my favorite bakery,

00:00:50.719 --> 00:00:53.839
go into the shop, select the cake from the counter,

00:00:53.840 --> 00:00:56.190
virtuous cake, and then drive home.

00:00:56.189 --> 00:01:00.634
In the first case, we are more concerned about the result we want to achieve.

00:01:00.634 --> 00:01:01.909
But in the second one,

00:01:01.909 --> 00:01:03.875
we focus on the exact steps,

00:01:03.875 --> 00:01:05.599
how we get to the result.

00:01:05.599 --> 00:01:08.149
In most cases, declarative systems

00:01:08.150 --> 00:01:10.984
are an abstraction layer of an imperative system,

00:01:10.984 --> 00:01:15.310
that takes care of figuring out the necessary steps to achieve the result.

00:01:15.310 --> 00:01:17.094
So you might say to your mom,

00:01:17.094 --> 00:01:21.015
"Let's get a cake for Julia" trusting her that she will know,

00:01:21.015 --> 00:01:22.500
which bakery to go to,

00:01:22.500 --> 00:01:24.015
how to actually get there,

00:01:24.015 --> 00:01:26.864
and what type of cake Julia likes.

00:01:26.864 --> 00:01:29.929
If you have used pandas DataFrames before,

00:01:29.930 --> 00:01:32.090
you are probably familiar with how to manipulate

00:01:32.090 --> 00:01:33.475
DataFrames programmatically.

00:01:33.474 --> 00:01:38.074
We can chain methods such as filter and group by one after another,

00:01:38.075 --> 00:01:41.305
transforming the DataFrame further and further.

00:01:41.305 --> 00:01:44.900
In the next few videos, we will dive into how to do

00:01:44.900 --> 00:01:48.680
data transformations with DataFrames and imperative programming.

00:01:48.680 --> 00:01:51.390
So let's get started.

