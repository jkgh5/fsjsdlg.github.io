WEBVTT
Kind: captions
Language: zh-CN

00:00:04.669 --> 00:00:07.859
在开始学习具体技术前

00:00:07.860 --> 00:00:11.565
你可能会好奇为啥 Spark 要用函数式编程来开发

00:00:11.564 --> 00:00:16.559
最重要的原因就是函数式编程非常合适分布式系统

00:00:16.559 --> 00:00:19.769
上节课 我把分布式系统描述为

00:00:19.769 --> 00:00:22.649
一堆一起工作的电脑

00:00:22.649 --> 00:00:26.265
另外一个比较有意思和有用的描述来自于

00:00:26.265 --> 00:00:30.570
计算机科学先锋 Leslie Lamport

00:00:30.570 --> 00:00:34.350
他说 如果你自己的电脑某天莫名地死机了

00:00:34.350 --> 00:00:38.750
很可能是其他电脑导致的 那么你就是在用分布式系统了

00:00:38.750 --> 00:00:41.630
函数式编程有助于最大限度地减少

00:00:41.630 --> 00:00:45.125
这种会造成整个分布式系统瘫痪的错误

00:00:45.125 --> 00:00:50.255
函数式编程的名称来源于你在代数里学的函数

00:00:50.255 --> 00:00:55.190
这些函数比普通的Python函数要严格 因为在数学中

00:00:55.189 --> 00:00:58.879
当你给函数一个输入时 它只能给你唯一输出

00:00:58.880 --> 00:01:02.915
但 Python 可以让你创建一些灵活

00:01:02.914 --> 00:01:08.674
或者叫做复变函数 其输出值会取决于输入和其他参数 

00:01:08.674 --> 00:01:12.189
在数学课里 当你计算一个函数的值时

00:01:12.189 --> 00:01:15.185
你肯定会保持函数的输入不变

00:01:15.185 --> 00:01:16.894
但是 Python 里的输入就会改变

00:01:16.894 --> 00:01:20.129
是不是很神奇

