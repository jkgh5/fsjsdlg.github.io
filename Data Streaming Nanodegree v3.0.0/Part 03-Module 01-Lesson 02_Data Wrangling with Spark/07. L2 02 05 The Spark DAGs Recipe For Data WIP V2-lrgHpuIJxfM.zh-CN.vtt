WEBVTT
Kind: captions
Language: zh-CN

00:00:06.889 --> 00:00:11.460
就像面包公司通过老面团来复制原始配方

00:00:11.460 --> 00:00:14.670
每个 Spark 函数都会复制一份输入数据

00:00:14.669 --> 00:00:17.144
从而保证原始数据不会改变

00:00:17.144 --> 00:00:20.774
因为 Spark 不会更改输入数据

00:00:20.774 --> 00:00:22.919
它被称为不可变的（immutible）

00:00:22.920 --> 00:00:25.500
这种方式对于单独的函数是行得通的

00:00:25.500 --> 00:00:28.495
但是当你的程序中有很多函数时会发生什么呢

00:00:28.495 --> 00:00:32.109
毕竟 当你处理数据时 通常会有很多步骤

00:00:32.109 --> 00:00:34.700
就像烤面包有很多步骤一样

00:00:34.700 --> 00:00:38.390
在 Spark 中 你也需要通过多个函数一起来处理数据

00:00:38.390 --> 00:00:41.285
每个函数完成一小部分工作

00:00:41.284 --> 00:00:45.469
很多函数都由一堆子函数组成

00:00:45.469 --> 00:00:48.079
所以要使这个大函数工作

00:00:48.079 --> 00:00:50.689
每个子函数就需要随时待命

00:00:50.689 --> 00:00:53.119
似乎这种方式下 Spark 需要

00:00:53.119 --> 00:00:56.034
为每个子函数复制一份输入数据

00:00:56.034 --> 00:00:58.459
如果是这种情况 那 Spark 程序

00:00:58.460 --> 00:01:00.679
很快就会耗尽内存

00:01:00.679 --> 00:01:03.619
还好 Spark 会通过一种叫

00:01:03.619 --> 00:01:07.159
惰性计算的函数式编程概念来避免这种情况的发生

00:01:07.159 --> 00:01:10.039
在 Spark 对程序中的数据进行任何操作前

00:01:10.040 --> 00:01:15.050
它首先会建立一个流程图 把每步所需的函数和数据确定好

00:01:15.049 --> 00:01:18.379
流程图每个步骤中的指引就像你的面包配方

00:01:18.379 --> 00:01:22.354
在 Spark 中 这个流程图称为有向无环图

00:01:22.355 --> 00:01:23.960
听上去很拗口

00:01:23.959 --> 00:01:27.664
所以几乎每个人都使用它的缩写 DAG（Directed Acyclic Graph）

00:01:27.665 --> 00:01:30.185
当 Spark 在代码上构建 DAG 

00:01:30.185 --> 00:01:32.135
它会检查是否可以暂时不复制数据

00:01:32.135 --> 00:01:35.405
等到最后一刻再去复制数据

00:01:35.405 --> 00:01:38.799
这正是你在烤面包时会做的事情

00:01:38.799 --> 00:01:41.814
你不会抓完面粉 把它带回碗里

00:01:41.814 --> 00:01:45.259
然后又回到厨房拿糖 再回去加入碗里

00:01:45.260 --> 00:01:47.060
然后又回到柜子里取盐

00:01:47.060 --> 00:01:48.920
然后每使用一次原料就再重复一次上面的步骤

00:01:48.920 --> 00:01:53.560
和第一课中说的数据颠簸一样 这种来回取原料的方式非常浪费时间

00:01:53.560 --> 00:01:57.290
事实上 你会在开始作面团之前就查看配方

00:01:57.290 --> 00:02:01.655
看看你可以先把哪些原料一次性混在一起

00:02:01.655 --> 00:02:04.929
通常 你会把所有的干原料混合

00:02:04.929 --> 00:02:06.665
然后混合所有湿原料

00:02:06.665 --> 00:02:09.185
最后在烘烤前将它们混合在一起

00:02:09.185 --> 00:02:14.310
在 Spark 中 这些多步组合称为阶段

