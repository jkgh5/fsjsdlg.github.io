WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.800
Before we go any further,

00:00:01.800 --> 00:00:06.705
I want to review a new feature that's new in Python 3.7, Dataclasses.

00:00:06.705 --> 00:00:10.109
Dataclasses are useful syntactical shortcut for quickly

00:00:10.109 --> 00:00:13.964
building objects that are only meant to represent data of some kind.

00:00:13.964 --> 00:00:18.359
Dataclasses simply contain typed fields and that's it.

00:00:18.359 --> 00:00:20.669
They typically do not have any functions other than

00:00:20.670 --> 00:00:24.255
helper functions or for serialization or deserialization.

00:00:24.254 --> 00:00:29.030
They're quick to write and provide a better alternative to using Python dictionaries.

00:00:29.030 --> 00:00:30.785
Let's review an example.

00:00:30.785 --> 00:00:35.990
You may have noticed code that looked like this in previous exercises or demonstrations.

00:00:35.990 --> 00:00:42.650
This code simply states that purchase is a class which is only meant to represent data.

00:00:42.649 --> 00:00:47.373
We declare the class may have a string username and a string currency,

00:00:47.374 --> 00:00:49.670
as well as an amount which is an integer.

00:00:49.670 --> 00:00:51.575
Notice we've provided defaults here.

00:00:51.575 --> 00:00:54.005
So if I simply instantiate a purchase,

00:00:54.005 --> 00:00:55.770
I'll get a default username,

00:00:55.770 --> 00:00:57.990
currency, and amount as empty string,

00:00:57.990 --> 00:01:00.320
empty string, and zero. Well, this is neat.

00:01:00.320 --> 00:01:03.140
What does this give us relative to a plain Python object?

00:01:03.140 --> 00:01:06.909
First, it defines the expected types for the fields.

00:01:06.909 --> 00:01:10.549
Second, dataclasses come with a number of useful functions

00:01:10.549 --> 00:01:14.164
for simple serialization and deserialization such as as Dict.

00:01:14.165 --> 00:01:17.750
Beyond this, dataclasses can be marked as frozen.

00:01:17.750 --> 00:01:21.370
To indicate that instances of the class are immutable.

00:01:21.370 --> 00:01:25.954
Well, practically speaking as immutable as anything in Python could ever really be.

00:01:25.954 --> 00:01:27.664
When working with files data,

00:01:27.665 --> 00:01:30.830
it's a good idea to try and use dataclasses when you can,

00:01:30.829 --> 00:01:34.670
and makes it clear that the structure you expect your data to be in and it

00:01:34.670 --> 00:01:39.750
also helps reduce boilerplate code with package functions like as Dict.

