WEBVTT
Kind: captions
Language: en

00:00:01.580 --> 00:00:04.019
In this demonstration, we'll use

00:00:04.019 --> 00:00:07.469
the Kafka REST proxy to fetch metadata about our cluster.

00:00:07.469 --> 00:00:09.794
So we're going to go back to our workspace,

00:00:09.794 --> 00:00:12.105
and we're going to see sample4.

00:00:12.105 --> 00:00:15.630
Sample4 is fairly different from what we've seen in our other example,

00:00:15.630 --> 00:00:20.320
so I'm going to jump into a single document mode on sample4,

00:00:20.320 --> 00:00:22.785
and you can see we have a very simple document here.

00:00:22.785 --> 00:00:25.320
We've imported JSON and Requests because we're going to use that.

00:00:25.320 --> 00:00:28.050
We've defined the REST proxy URL and this will be

00:00:28.050 --> 00:00:30.975
the same URL that you will use in your exercises,

00:00:30.975 --> 00:00:33.840
but I'll also define this for you as REST proxy URL.

00:00:33.840 --> 00:00:36.735
We've got three functions that we're going to define.

00:00:36.734 --> 00:00:41.269
For now, they don't really do much other than either pass or return an empty string.

00:00:41.270 --> 00:00:44.630
So let's go ahead and start to build out our requests.

00:00:44.630 --> 00:00:47.780
The first thing we're going to do is actually ask

00:00:47.780 --> 00:00:51.380
Kafka REST proxy to tell us what topics it's aware of.

00:00:51.380 --> 00:00:54.410
So to do that, we're going to make a request.

00:00:54.409 --> 00:01:01.079
So we're going to do a get on REST proxy URL,

00:01:01.079 --> 00:01:06.125
and we also want to make sure that we're basically asking for topics.

00:01:06.125 --> 00:01:09.379
So let's go check the Confluent REST proxy API documentation.

00:01:09.379 --> 00:01:13.189
There'll be a link to this in your exercise.

00:01:13.189 --> 00:01:16.295
So the first thing we want to do is get topics.

00:01:16.295 --> 00:01:19.564
So we can see it's just slash topics.

00:01:19.564 --> 00:01:23.769
So we're going to say, we're going to add that.

00:01:23.769 --> 00:01:26.439
Then what we're going to do is we're going to make

00:01:26.439 --> 00:01:29.200
sure that we didn't have an error in our response.

00:01:29.200 --> 00:01:33.490
So we're going to say, "raise_for_status."

00:01:33.489 --> 00:01:34.809
This is something that comes out of

00:01:34.810 --> 00:01:38.484
the python requests library which you can read more about if you'd like.

00:01:38.484 --> 00:01:41.444
But all we're doing is saying we want to make sure

00:01:41.444 --> 00:01:46.584
that we saw a 200 response from our endpoint and not an error.

00:01:46.584 --> 00:01:47.964
If we do get an error,

00:01:47.965 --> 00:01:51.159
we're basically just going to print that we received in error.

00:01:51.159 --> 00:01:54.170
Then we're going to exit.

00:01:54.170 --> 00:02:02.954
Otherwise, we're going to go ahead and return the response JSON.

00:02:02.954 --> 00:02:05.329
Before we do that though, let's go ahead and take

00:02:05.329 --> 00:02:07.234
a look at what we can expect to get back.

00:02:07.234 --> 00:02:11.810
So we have this Get Topics function or HTTP REST call.

00:02:11.810 --> 00:02:15.335
This is an example request and this is the format of the response.

00:02:15.335 --> 00:02:19.564
So you'll see we're just going to get back an array of the list of topics.

00:02:19.564 --> 00:02:22.579
So let's go ahead and run that function and see what happens.

00:02:22.580 --> 00:02:26.210
We haven't completed Get Topic or get brokers yet but we'll do that in a moment.

00:02:26.210 --> 00:02:30.415
So I'm going to modify this run function and just print out this list of topics.

00:02:30.414 --> 00:02:33.169
Now, let's get out of our single document mode,

00:02:33.169 --> 00:02:35.419
and let's try running sample4.

00:02:35.419 --> 00:02:39.274
Great. You can see we have a list of all topics on our broker.

00:02:39.275 --> 00:02:46.335
If I were to run Kafka topics and specify our ZooKeeper,

00:02:46.335 --> 00:02:47.974
we should see the same list.

00:02:47.974 --> 00:02:50.460
So let's go to full-screen mode.

00:02:50.680 --> 00:02:56.659
So as you can see, the array that we get back from our program that we

00:02:56.659 --> 00:02:59.240
wrote talking to REST proxy matches the list that we got

00:02:59.240 --> 00:03:02.909
back from actually writing the Kafka topics command-line tool.

